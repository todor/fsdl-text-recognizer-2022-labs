[flake8]

# Only check selected error codes
select = ANN,B,B9,BLK,C,D,E,F,I,S,W

# C9 - flake8 McCabe Complexity checker -- threshold
max-complexity = 12

# E501 - flake8 -- line length too long, actually handled by black
max-line-length = 120

# Ignore the following error codes
# E W - flake8 PEP style check
# whitespace, import, line length, binary operator line breaks
# S - flake8-bandit safety check
# assert removed in bytecode, no request timeout, pRNG not secure, hardcoded password
# ANN - flake8-annotations type annotation check
# ignore all for now, but always ignore some
# D1 - flake8-docstrings docstring style check
# missing docstrings
# D2 D4 - flake8-docstrings docstring style check
# whitespace issues and first line content
# DAR - flake8-darglint docstring correctness check
# mismatched or missing type in docstring
extend-ignore =
    E203,E402,E501,W503,
    S101,S113,S311,S105,
    ANN,ANN002,ANN003,ANN101,ANN102,ANN202,
    D100,D102,D103,D104,D105,
    D200,D205,D400,D401,
    DAR103

# flake8-import-order: which names are first party?
application-import-names = app_gradio,text_recognizer,tests,training

# flake8-import-order: which import order style guide do we use?
import-order-style = google

# flake8-docstrings: which docstring style guide do we use?
docstring-convention = numpy
docstring-style = numpy

# darglint: how "strict" are we with docstring completeness?
strictness = short

# flake8-annotations: do we allow un-annotated Nones in returns?
suppress-none-returning = true

# flake8-annotations: do we allow init to have no return annotation?
mypy-init-return = true

# List of case-by-case ignores, see files for details
per-file-ignores =
    */__init__.py:F401,I
    */data/*.py:DAR
    data/*.py:F,I
    *text_recognizer/util.py:DAR101,F401
    *training/run_experiment.py:I202
    *app_gradio/app.py:I202
